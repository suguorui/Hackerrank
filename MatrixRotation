#!/bin/python

import sys

hackonacci = [1,1,0,1,0,0,1]

def calculate_matrix(n):
    m = []
    m.append([])
    for i in range(1, n+1):
        line = []
        line.append(0)
        for j in range(1, n+1):
            line.append(hackonacci[(i*i*j*j)%7])
        m.append(line)
    return m

def get_result(matrix, rotation):
    count = 0
    for i in range(1, n+1):
       for j in range(1, n+1):
         if matrix[i][j] != get_rotated(matrix, i, j, rotation):
            count += 1
    return count

def get_rotated(matrix, i, j, rotation):
    n = len(matrix)-1
    if rotation == 1:
       return matrix[n+1-j][i]
    if rotation == 2:
       return matrix[n+1-i][n+1-j]
    if rotation == 3:
       return matrix[j][n+1-i]
    return matrix[i][j]

n,q = input().strip().split(' ')
n,q = [int(n),int(q)]
matrix = calculate_matrix(n)
cache = [0, -1 , -1, -1]
for a0 in range(q):
    angle = int(input().strip())
    # your code goes here
    rotation = int((angle/90) % 4)
    if cache[rotation] == -1:
        cache[rotation] = get_result(matrix, rotation)
    print(cache[rotation])
